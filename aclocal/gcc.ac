dnl
dnl Figure out which version of gcc/g++ to use.
dnl

AC_DEFUN(AC_OASYS_CONFIG_GCC, [
    AC_CACHE_CHECK(for the version of the gcc compiler, oasys_cv_prog_gccver, [
      oasys_cv_prog_gccver=`$CC --version | head -1`
      oasys_cv_prog_gccver=`echo $oasys_cv_prog_gccver | sed 's/.*gcc.*(GCC) //'`
      oasys_cv_prog_gccver=`echo $oasys_cv_prog_gccver | sed 's/ .*//'`
    ])      

    # 
    # Set version-specific compiler options
    #
    case "$oasys_cv_prog_gccver" in
        #
        # for gcc 2.9.X and 3.1, the auto-dependency features don't work, and 
        # _GNU_SOURCE isn't defined, so do both those things here
        #
        3.1*|2.9*)
            OASYS_CPPFLAGS="$OASYS_CPPFLAGS -D_GNU_SOURCE"
	    DEPFLAGS=""
            echo "*** "
	    echo "*** warning: using old compiler $cc version $oasys_cv_prog_gccver,"
	    echo "***          automatic dependency generation will not work"
            echo "*** "
	    ;;
	#
	# For 3.2 and beyond, use auto-dependency flags. 
	# Note that for m4 to output a '$' requires the '@S|@' heinosity below.
	#
	3.*|4.*)
	    DEPFLAGS=['-MMD -MP -MT "@S|@*.o @S|@*.E @S|@*.po"']
	    ;;
	#
	# Otherwise bail
	#
        *)
	    echo "error: unsupported compiler version $oasys_cv_prog_gccver"
	    exit  1
	    ;;
    esac

    AC_CACHE_CHECK([whether gcc accepts -Wno-long-double (Apple OSX only)],
	           oasys_cv_prog_gcc_w_no_long_double, [
        CPPFLAGS_save=$CPPFLAGS
        CPPFLAGS="$CPPFLAGS -Wno-long-double"
	AC_LINK_IFELSE(
	  AC_LANG_PROGRAM(
	    [],
            [/* nothing */]
	  ),
          [ 
              oasys_cv_prog_gcc_w_no_long_double=yes
          ],
          [
              oasys_cv_prog_gcc_w_no_long_double=no
          ])
        CPPFLAGS=$CPPFLAGS_save
    ])

    if test $oasys_cv_prog_gcc_w_no_long_double = yes ; then
        OASYS_CPPFLAGS="$OASYS_CPPFLAGS -Wno-long-double"
    fi

    AC_SUBST(DEPFLAGS)
])
