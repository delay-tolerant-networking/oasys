#!/bin/bash
EXEC_FILE="%exec_file%"
EXEC_NAME="%exec_name%"
EXEC_OPTS="%exec_opts%"
GDB_OPTS="%gdb_opts%"
RUN_DIR="%run_dir%"
RUN_ID="%run_id%"

GDB_EXEC=%gdb_exec%
GDB=%gdb%
VALGRIND=%valgrind%
VALGRIND_OPTS=%valgrind_opts%
LOCAL=%local%
PAUSE_AFTER=%pause_after%
VERBOSE=%verbose%
XTERM=%xterm%

%exec_env%

function dbg {
    if [ $VERBOSE = 1 ]; then
	echo $*
    fi
}

ulimit -c unlimited
cd $RUN_DIR


VALGRIND_OPTS="--tool=memcheck -v --num-callers=16 \
               --leak-check=yes --leak-resolution=high --show-reachable=no \
               $VALGRIND_OPTS"

if [ $VALGRIND = 1 ] ; then
    export GLIBCXX_FORCE_NEW=1
    export GLIBCPP_FORCE_NEW=1
fi

if [ ${EXEC_FILE:0:1} = '/' ] ; then
    EXEC_PATH=$EXEC_FILE
else
    EXEC_PATH=$RUN_DIR/$EXEC_FILE
fi

CHOICE="${XTERM} ${GDB} ${VALGRIND}"
case $CHOICE in
    "1 1 0")
	CMD="$GDB_EXEC $EXEC_PATH -x run-$EXEC_NAME.gdb"
	IN="</dev/stdin"
	OUT="2>&1 | tee -a $EXEC_NAME.out"
	;;
    "1 0 1")
	CMD="valgrind $VALGRIND_OPTS $EXEC_PATH $EXEC_OPTS"
	IN="</dev/stdin"
	OUT="2>&1 | tee -a $EXEC_NAME.out"
	;;
    "1 0 0") 
	CMD="$EXEC_PATH $EXEC_OPTS"
	IN="</dev/stdin"
	OUT="2>&1 | tee -a $EXEC_NAME.out"
	;;
    "0 1 0")
	CMD="$GDB_EXEC -batch -x run-test.gdb $GDB_OPTS $EXEC_PATH"
	IN=""
	OUT=">>$RUN_DIR/$EXEC_NAME.out 2>&1"
	;;
    "0 0 1")
	CMD="valgrind $VALGRIND_OPTS $EXEC_PATH $EXEC_OPTS"
	IN=""
	OUT=">>$RUN_DIR/$EXEC_NAME.out 2>&1"
	;;
    "0 0 0")
	CMD="$EXEC_PATH $EXEC_OPTS"
	IN=""
	OUT=">>$RUN_DIR/$EXEC_NAME.out 2>&1"
	;;
    *) echo "! garbage arguments to run script"; exit ;;
esac

EXECCMD="( $CMD $IN & echo \$! > $RUN_DIR/$EXEC_NAME.pid ) $OUT"
dbg "% $EXECCMD"

if [ \( "$XTERM" = 1 \) -a \( "$PAUSE_AFTER" = 1 \) ]; then
    eval $EXECCMD
    echo
    read -s -n1 -p "== Hit any key to close xterm ==" keypress
else
    eval $EXECCMD
fi
