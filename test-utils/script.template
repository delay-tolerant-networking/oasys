#!/bin/bash
EXEC_FILE="%exec_file%"
EXEC_OPTS="%exec_opts%"
GDB_OPTS="%gdb_opts%"
RUN_DIR="%run_dir%"
RUN_ID="%run_id%"

GDB=%gdb%
VALGRIND=%valgrind%
LOCAL=%local%
PAUSE_AFTER=%pause_after%
VERBOSE=%verbose%
XTERM=%xterm%

%exec_env%

function dbg {
    if [ $VERBOSE = 1 ]; then
	echo $*
    fi
}

ulimit -c unlimited
cd $RUN_DIR

CHOICE="${XTERM} ${GDB} ${VALGRIND}"
case $CHOICE in
    "1 1 0")
	CMD="gdb $RUN_DIR/$EXEC_FILE -x run-$EXEC_FILE.gdb"
	IN="</dev/stdin"
	OUT="| tee -a $EXEC_FILE.out 2>&1"
	echo "stderr was redirected to $EXEC_FILE.out" >> $EXEC_FILE.err
	;;
    "1 0 1")
	CMD="valgrind --tool=memcheck --leak-check=yes -v --num-callers=8 \
               $RUN_DIR/$EXEC_FILE $EXEC_OPTS"
	IN="</dev/stdin"
	OUT="| tee -a $EXEC_FILE.out 2>&1"
	echo "stderr was redirected to $EXEC_FILE.out" >> $EXEC_FILE.err
	;;
    "1 0 0") 
	CMD="$RUN_DIR/$EXEC_FILE $EXEC_OPTS"
	IN="</dev/stdin"
	OUT="| tee -a $EXEC_FILE.out 2>&1"
	echo "stderr was redirected to $EXEC_FILE.out" >> $EXEC_FILE.err
	;;
    "0 1 0")
	CMD="gdb -batch -x run-test.gdb $GDB_OPTS $RUN_DIR/$EXEC_FILE"
	IN=""
	OUT=">>$RUN_DIR/$EXEC_FILE.out 2>&1"
	;;
    "0 0 1")
	CMD="valgrind --tool=memcheck --leak-check=yes -v --num-callers=8 \
               $RUN_DIR/$EXEC_FILE $EXEC_OPTS"
	IN=""
	OUT=">>$RUN_DIR/$EXEC_FILE.out 2>&1"
	;;
    "0 0 0")
	CMD="$RUN_DIR/$EXEC_FILE $EXEC_OPTS"
	IN=""
	OUT=">>$RUN_DIR/$EXEC_FILE.out 2>&1"
	;;
    *) echo "! garbage arguments to run script"; exit ;;
esac

EXECCMD="( $CMD $IN & echo \$! > $RUN_DIR/$EXEC_FILE.pid ) $OUT"
dbg "% $EXECCMD"

if [ \( "$XTERM" = 1 \) -a \( "$PAUSE_AFTER" = 1 \) ]; then
    eval $EXECCMD
    echo
    read -s -n1 -p "== Hit any key to close xterm ==" keypress
else
    eval $EXECCMD
fi
