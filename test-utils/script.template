#!/bin/bash
EXEC_FILE="%exec_file%"
EXEC_OPTS="%exec_opts%"
GDB_OPTS="%gdb_opts%"
RUN_DIR="%run_dir%"
RUN_ID="%run_id%"


GDB=%gdb%
LOCAL=%local%
PAUSE_AFTER=%pause_after%
VERBOSE=%verbose%
XTERM=%xterm%

function dbg {
    if [ $VERBOSE = 1 ]; then
	echo $*
    fi
}

ulimit -c unlimited
cd $RUN_DIR

CHOICE="${XTERM} ${GDB}"
case $CHOICE in
    "1 1")
	CMD="gdb $RUN_DIR/$EXEC_FILE -x run-$EXEC_FILE.gdb 2>&1 | \
               tee $EXEC_FILE.out"
	echo "stderr was redirected to $EXEC_FILE.out" >> $EXEC_FILE.err
	;;
    "1 0") 
	CMD="$RUN_DIR/$EXEC_FILE $EXEC_OPTS 2>&1 | tee $EXEC_FILE.out"
	echo "stderr was redirected to $EXEC_FILE.out" >> $EXEC_FILE.err
	;;
    "0 1")
	CMD="gdb -batch -x run-test.gdb $GDB_OPTS $RUN_DIR/$EXEC_FILE \
	    2>$RUN_DIR/$EXEC_FILE.err >$RUN_DIR/$EXEC_FILE.out "
	;;
    "0 0")
	CMD="$RUN_DIR/$EXEC_FILE $EXEC_OPTS 2>$RUN_DIR/$EXEC_FILE.err \
	    >$RUN_DIR/$EXEC_FILE.out"
	;;
    *) echo "! garbage arguments to run script"; exit ;;
esac


dbg "% $CMD"
if [ \( "$XTERM" = 1 \) -a \( "$PAUSE_AFTER" = 1 \) ]; then
    eval $CMD
    echo
    read -s -n1 -p "== Hit any key to close xterm ==" keypress
else
    dbg "% $CMD"
    eval exec $CMD
fi
